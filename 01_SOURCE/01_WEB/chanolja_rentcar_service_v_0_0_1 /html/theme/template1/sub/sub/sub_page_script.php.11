<script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=df0e6b53dd68e241445cdf16324475bb"></script>
<script>
        function mapstart(){
          var mapidVal = $("#mapid").val();
          if(mapidVal == 'getData'){
            var tMapVal = "map";
          }
          else{
            var tMapVal = "mapDetail";
          }

          var mapContainer = document.getElementById(tMapVal), // 지도를 표시할 div 
        //   alert('mapstart ' + mapContainer);
              mapOption = { 
                  center: new kakao.maps.LatLng(37.5407622,127.0706095), // 지도의 중심좌표
                  level: 3 // 지도의 확대 레벨
              };
          
          var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다
          
          // 마커가 표시될 위치입니다 
          var markerPosition  = new kakao.maps.LatLng(37.5407622,127.0706095); 
          
          // 마커를 생성합니다
          var marker = new kakao.maps.Marker({
              position: markerPosition
          });
          
          // 마커가 지도 위에 표시되도록 설정합니다
          //marker.setMap(map);
          
          // 인포윈도우를 생성합니다
          var infowindow = new kakao.maps.InfoWindow({
              content : "<div style='position: absolute; left: 0px; top: 0px;'><div style='width:140px;padding:1px;text-align:center;'>칠성종합시장</div></div>" 
          });
            
          // 마커 위에 인포윈도우를 표시합니다. 두번째 파라미터인 marker를 넣어주지 않으면 지도 위에 표시됩니다
          //infowindow.open(map, marker); 
          
          var imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_red.png';                              // 마커이미지 주소
              imageSize = new kakao.maps.Size(34, 36);                // 마커이미지의 크기
              imageOption = {offset: new kakao.maps.Point(17, 36)};   // 마커의 좌표와 일치시킬 이미지 안에서의 좌표설정
                
          // 마커의 이미지정보를 가지고 있는 마커이미지를 생성합니다
          var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imageOption);
          
          if(mapidVal == 'getData'){
            var arr = JSON.parse($("#arrayLocation").val());
          }
          else{
            var arr = JSON.parse($("#arrayLocationDetail").val());
          }
          
          // 지도를 재설정할 범위정보를 가지고 있을 LatLngBounds 객체를 생성합니다
          var bounds = new kakao.maps.LatLngBounds();   
          // var arr = new Array();
          // arr[0] = ["칠성시장북편 노상공영주차장",35.8780671960342,128.60320927213, "대구 북구 칠성동1가 275-3","1980287267"];
          // arr[1] = ["칠성시장방범초소 노상공영주차장",35.8794483127273,128.602329365994, "대구 북구 칠성동2가 409-24","1438742395"];
          // arr[2] = ["신천둔치주차장",35.8767253660639,128.605336577613, "대구 북구 칠성동1가 276-1","10068807"];
          // arr[3] = ["칠성시장서편 노상공영주차장",35.8771714863247,128.601464917779, "대구 북구 칠성동1가 236-1","27154726"];
          // arr[4] = ["칠성공영주차장",35.8761081400681,128.601660859567, "대구 북구 칠성남로 196","20587860"];
          // arr[5] = ["신천교고가도로밑 노상공영주차장",35.875440484078,128.607219820583, "대구 북구 칠성동1가 279-1","842394951"];
          
          
          var markerTmp;      // 마커
          var customOverlay;  // 오버레이
          var contentStr;
          var points = [];
          for (var i=0;i<arr.length;i++) {
            //   console.log('place ' + arr[i].place + ' lat ' + arr[i].lat + ' lng ' + arr[i].lng);
              var pushval = arr[i].lat+","+arr[i].lng;
              points.push(new daum.maps.LatLng(arr[i]['lat'],arr[i]['lng']));
              markerTmp = new daum.maps.Marker({
                  position: new daum.maps.LatLng(arr[i]['lat'],arr[i]['lng']),
                  title: arr[i]['address'],
                  image: markerImage,
                  map:map,
              });
              contentStr = "<div class='customoverlay'><span class='title'>"+ arr[i]['place'] +"</span></div>";
              customOverlay = new kakao.maps.CustomOverlay({
                  map: map,
                  position: new daum.maps.LatLng(arr[i]['lat'],arr[i]['lng']),
                  content: contentStr,
                  yAnchor: 1 
              });
              bounds.extend(points[i]);
          }
          // 지도 타입 변경 컨트롤을 생성한다
          var mapTypeControl = new kakao.maps.MapTypeControl();
          // 지도의 상단 우측에 지도 타입 변경 컨트롤을 추가한다
          map.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT);    
          // 지도에 확대 축소 컨트롤을 생성한다
          var zoomControl = new kakao.maps.ZoomControl();
          // 지도의 우측에 확대 축소 컨트롤을 추가한다
          map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);
          // 아래 코드는 지도 위의 마커를 제거하는 코드입니다
          // marker.setMap(null);  
          map.setBounds(bounds);
        }
</script>
<script>
    var mapid = "";
    flatpickr.localize(flatpickr.l10ns.ko);//한글
    var act_target = "<?=$act_target?>";
    var divisionType = "1";
    var select_guestroom_code = "";
    var select_guestroom_fee = "";
    var total_price = 0;
    var guestroom_info_data;
    var option_info_data;
    var conType = "<?=$conType?>";
    var areaData;
    var optbasicData;
    var form_userid;
    $(function(){
        $(".sch_txt").click(function(){
            $(this).parent(".sch_select").toggleClass("active");
        });
    });
    
    $(function(){
        $(".list_select").click(function(){
            $(this).parent(".list_form").toggleClass("active");
        });
    });
    
    /* 탭 메뉴 */
    $(function (){
	    $(".tab_con>div").hide();
	    $(".tab_con>div:first").show();   
	    $(".tab_headers li").click(function(){
	        $(".tab_headers li").removeClass("selected");
	        $(this).addClass("selected");
	        $(".tab_con>div").hide();
	        $($(this).attr("rel")).show();
	    });
	});

    $( function() {
    $( "#accordion" ).accordion({
        collapsible: true,
        active: false,

    });
    } );

function paymthodChang(ptype){
    if(ptype =='card') {
        $("#account_info_tr").hide();
        $("#depositor_tr").hide();
    }
    else if(ptype =='bank'){
        $("#account_info_tr").show();
        $("#depositor_tr").show();
    }
}    

$("#inputDate").flatpickr({
     mode: "range",
     dateFormat: "Y-m-d",
     minDate: "today",
     defaultDate: ["<?=$todate?>","<?=$nextdate?>"],
     locale: {
                     rangeSeparator: '~'
     },
     local:'ko',
     conjunction:"~",
     disable: [
       function(date) {
           // disable every multiple of 8
           //return !(date.getDate() % 10);

       }
   ],
   onClose: function(selectedDates, dateStr, instance) {
      //getData(dateStr);
    //   findSearchData('main');
       setDate(dateStr);
   }
});

$("#inputDate_sub").flatpickr({
     mode: "range",
     dateFormat: "Y-m-d",
     minDate: "today",
     defaultDate: [$("#sss").val(),$("#eee").val()],
     locale: {
                     rangeSeparator: '~'
     },
     local:'ko',
     conjunction:"~",
     disable: [
       function(date) {
           // disable every multiple of 8
           //return !(date.getDate() % 10);

       }
   ],
   onClose: function(selectedDates, dateStr, instance) {
      //getData(dateStr);
    //   findSearchData('sub');
   }
});
    <? if($act_target == 'reserve_confirm'){?>
        $(document).ready(function() {
        $("#subpagebg").hide();  
        $("#sub_page_1").hide(); 
        $("#sub_page_map").hide(); 
        $("#sub_page_detail").hide(); 
        $("#customer_info").hide(); 
        $("#reservation_completion").hide(); 
        $("#reservation_inquiry_list").hide(); 
        $("#reservation_inquiry").show(); 
        // $("#login").hide(); 
        $("#login_form").hide(); 
        $("#memberjoin").hide(); 
        //   reserve_fifth('1647937331');
        // get_area();
        // get_option_basic();
        // findSearchData('init');
       });
    <? }else if($act_target == 'card_return'){?>
        $(document).ready(function() {
        reserve_fifth("<?=$orderId?>");    
        $("#subpagebg").hide();  
        $("#sub_page_1").hide(); 
        $("#sub_page_map").hide(); 
        $("#sub_page_detail").hide(); 
        $("#customer_info").hide(); 
        $("#reservation_completion").show(); 
        $("#reservation_inquiry_list").hide(); 
        $("#reservation_inquiry").hide(); 
        // $("#login").hide(); 
        $("#login_form").hide(); 
        $("#memberjoin").hide(); 
        //   reserve_fifth('1647937331');
        // get_area();
        // get_option_basic();
        // findSearchData('init');
          
    });
    <?}else{?>
        $(document).ready(function() {
         //    room_image('9416914189');
        //    room_detail('9416914189');
        $("#subpagebg").show();  
        $("#sub_page_1").hide(); 
        $("#sub_page_map").hide(); 
        $("#sub_page_detail").hide(); 
        $("#customer_info").hide(); 
        $("#reservation_completion").hide(); 
        $("#reservation_inquiry").hide(); 
        $("#reservation_inquiry_list").hide(); 
        $("#login_form").hide(); 
        $("#memberjoin").hide(); 
        //   reserve_fifth('1647937331');
        get_area();
        get_option_basic();
    });
    <?}?>
   
    function move_top(){
        var offset = $(".breatcome_area").offset(); //해당 위치 반환
        $("html, body").animate({scrollTop: offset.top},400);
    }

    function get_area(){
      var division = "get_area";
      $.ajax({
      type: 'GET',
      url:'/client/act/get_init_data.php',
      async: false,
      data: {
           division : division,
      },
      error: function (request, status, error) {
      console.log('guestroom_info_ajax error');
      },
     success:function(json){
    //   console.log('get_area========');
       areaData = json;
       var html = "";
        for(var i=0 ; i < areaData.length ;i++ ){
            html += "<span>";
            html += "<input type='checkbox' name='area[]' value='"+areaData[i]['area_code']+"' class=''>";
            html += "<label for='chk1'>"+areaData[i]['area_name']+"</label>";
            html += "</span>";
            $("#mainArea").html(html);
            $("#subArea").html(html);
        }
      }
   });
 }

    function get_option_basic(){
      var division = "get_option_basic";
      $.ajax({
      type: 'GET',
      url:'/client/act/get_init_data.php',
      async: false,
      data: {
           division : division,
      },
      error: function (request, status, error) {
      console.log('guestroom_info_ajax error');
      },
     success:function(json){
    //   console.log('get_option_basic========');
       optbasicData = json;
       var html = "";
            html +="<h4>보유시설</h4>";
        for(var i=0 ; i < optbasicData.length ;i++ ){
            html += "<span>";
            html += "<input type='checkbox' name='basicoption[]' value='"+optbasicData[i]['option_code']+"' class=''>";
            html += "<label for='chk1'>"+optbasicData[i]['option_name']+"</label>";
            html += "</span>";
            $("#basicOption").html(html);
        }
      // $("#sit_pvi").html(html);
     }
   });
  }

function setDate(setdate){
    //  alert('setdate ' + setdate);
    $("#dateStr").val(setdate);
    var setdatesplit = setdate.split("~");
    $("#sss").val(setdatesplit['0']);
    $("#eee").val(setdatesplit['1']);
}
function findSearchData(locate) {
  if(locate == 'main'){
    $("#sub_page_1").show(); 
    $("#sub_page_map").show(); 
    $("#subpagebg").hide(); 
    setDate($("#inputDate").val());
    $("#inputDate_sub").val($("#inputDate").val());
  }
  else if(locate == 'init'){
    setDate('<?=$dateType?>').val();
    $("#inputDate_sub").val('<?=$dateType?>');
  }
  else{
    setDate($("#inputDate_sub").val());
  }

  divisionType = $("#divisionType").val();
  getData(divisionType,locate)
}
function getData(divisionType,locate) {
  $("#divisionType").val(divisionType);
  var division = 'getData';
  var personnel = "1";
if(divisionType == '1'){
  // var divisionType = $("#divisionType").val();
  var dateStr = $("#dateStr").val();
  var datalen = dateStr.length;
  if(datalen < '11'){
     var ndate = nextDay(dateStr);
     var ndateStr = dateStr+"~"+ndate;
     if(locate == 'main'){
        $("#inputDate").val(ndateStr);
     }else{
        $("#inputDate_sub").val(ndateStr);
     }
     dateStr = ndateStr;
  }
}
    var areaArray = new Array();
    $("input[name='area[]']:checked").each(function() { 
      var areaVal = $(this).val(); 
      areaArray.push(areaVal);
    });

    var optionArray = new Array();
    $("input[name='basicoption[]']:checked").each(function() { 
      var optionVal = $(this).val(); 
      optionArray.push(optionVal);
    });

    var form = $('#reserveForm')[0];
    var formData = new FormData(form);
    formData.append("division", "getData");
    formData.append("locate", locate);
    formData.append("area", areaArray);
    formData.append("basicoption", optionArray);

    for (var pair of formData.entries())
    {
    //   console.log(pair[0]+ ', ' + pair[1]);
    }
  $.ajax({
      type: 'POST',
      url:'/client/act/get_room_info.php',
      enctype: 'multipart/form-data',
      data:formData,
      cache:false,
      contentType : false,
      processData : false,
      error: function (request, status, error) {
      console.log('event error');
      },
      success:function(html){
    //   if(conType == '1'){
    //   $("#reserve_first_area_mo").html(html);
    //   }
    //   else{
      $("#reserve_first_area").html(html);
    //   }
    //   alert(dateStr);
      $("#dateStr").val(dateStr);
     }
   }
 );
 $("#mapid").val('getData');
 setTimeout(mapstart, 1000, 1);
 
//   showLoadingBar('stop');
}
// date 포맷을 만들어주는 함수 , ex) 20191210
function getDateStr(myDate){
  let month = myDate.getMonth() + 1
  let day = myDate.getDate()

  if (month < 10) month = '0' + month
  if (day < 10) day = '0' + day

  return (myDate.getFullYear() + '-' + month + '-' + day) // '20191211'
}
// 다음날을 구하는 함수
function nextDay(today) {
  //today = today.slice(0,4) + '-' + today.slice(4,6) + '-' + today.slice(6,) // ex) 2019-12-10
  let d = new Date(today) // 2019-12-10T00:00:00.000Z
  d.setDate(d.getDate() + 1)
  return getDateStr(d)
}
function showLoadingBar(val) {
          if(val == 'start'){
            $("#loadingArea").LoadingOverlay("show", {
              background  : "rgba(255, 255, 255, 1.0)"
            });
          }
          else{
            $("#loadingArea").LoadingOverlay("hide", true);
          }
}



function room_image(guestroom_code){
//   var dateStr="2022-03-19~2022-03-20";
  var division = 'guestroom_image_info_ajax';
  var divisionType = $("#divisionType").val();
  $.ajax({
      type: 'GET',
      url:'/client/act/get_guestroom_image.php',
      async: false,
      data: {
           division : division,
           guestroom_code : guestroom_code,
           divisionType : divisionType,
      },
      error: function (request, status, error) {
      console.log('guestroom_info_ajax error');
      },
      success:function(html){
      $("#sit_pvi").html(html);
     }
   }
 );
}
function room_detail(guestroom_code){
  $("#sub_page_detail").show(); 
  $("#sub_page_1").hide(); 
  $("#sub_page_map").hide(); 
  var dateStr = $("#dateStr").val();
  //alert(dateStr);
  //var dateStr="2022-03-19~2022-03-20";
  var division = 'guestroom_info_ajax';
  var divisionType = $("#divisionType").val();
  var reserve_code = "";
  var returnData ;
  $.ajax({
      type: 'GET',
      url:'/client/act/get_guestroom_detail.php',
      async: false,
      data: {
           division : division,
   